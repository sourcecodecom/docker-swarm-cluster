type: install
jpsVersion: '1.0.0'
name: Docker Swarm Custom
id: docker-swarm-custom

description:
  text: docker swarm custom
  short: docker swarm custom

baseUrl: https://raw.githubusercontent.com/sourcecodecom/docker-swarm-cluster/main

globals:
  REGISTRY_USER: registry
  REGISTRY_PASSWORD: 4y6iq?2TmV+Zzmy|
  REGISTRY_URL: registry.dewaweb.com
  REPLICATION_USER: repl
  REPLICATION_PASSWORD: repl12345
  MARIADB_ROOT_PASSWORD: test12345
  MARIADB_MASTER_HOST: mariadb-master
  DOCKER_MASTER_HOSTNAME: ${nodes.vds.master.id}
  DOCKER_SLAVE_HOSTNAME: ${nodes.vds[1].id}
  MARIADB_COMPOSE_FILE: /opt/services/mysql-repl/docker-compose.yml

nodes:
  # - nodeType: nginx-dockerized
  #   nodeGroup: bl
  #   fixedCloudlets: 5
  #   cloudlets: 8
  #   isSLBAccessEnabled: false

  # - nodeType: docker
  #   nodeGroup: cp
  #   image: jelastic/nginxphp_1.16.0-php-7.0.33:2
  #   registry:
  #     user: ${globals.REGISTRY_USER}
  #     password: ${globals.REGISTRY_PASSWORD}
  #     url: ${globals.REGISTRY_URL}
  #   scalingMode: STATEFUL
  #   fixedCloudlets: 5
  #   cloudlets: 8
  #   volumes:
  #   - /var/spool/cron
  #   volumeMounts:
  #     /var/www/webroot:
  #       protocol: NFS
  #       readOnly: false
  #       sourcePath: /data/ROOT
  #       sourceNodeGroup: storage
  #       sourceNodeId: "${nodes.storage[0].id}"
  #     /etc/nginx:
  #       protocol: NFS
  #       readOnly: true
  #       sourcePath: /data/nginx
  #       sourceNodeGroup: storage
  #       sourceNodeId: "${nodes.storage[0].id}"
  #     /var/spool/cron:
  #       protocol: NFS
  #       readOnly: false
  #       sourcePath: /data/cron
  #       sourceNodeGroup: storage
  #       sourceNodeId: "${nodes.storage[0].id}"
  #   links:
  #   - memcached:MEMCACHED
  #   - proxy:PROXYSQL
  
  # - nodeType: memcached
  #   nodeGroup: memcached
  #   fixedCloudlets: 5
  #   cloudlets: 8

  # - nodeType: storage
  #   nodeGroup: storage
  #   fixedCloudlets: 5
  #   cloudlets: 8
  #   cluster: true

  - nodeType: proxysql
    nodeGroup: proxy
    count: 2
    cloudlets: 16
    fixedCloudlets: 3
    displayName: ProxySQL

  - nodeType: dockerengine
    cloudlets: 32
    tag: 20.10.21
    nodeGroup: vps

  - nodeType: dockerengine
    cloudlets: 32
    tag: 20.10.21
    count: 2
    nodeGroup: vds
    displayName: MySQL Nodes

onInstall:
  - install: addons/docker-swarm-init.yml
  - get-tokens
  - pull-bitnami-mariadb
  - setup-docker-stack
  - install: scripts/proxysql-setup.yml
    settings:
      db_root_password: ${globals.MARIADB_ROOT_PASSWORD}
      replication_user: ${globals.REPLICATION_USER}
      replication_password: ${globals.REPLICATION_PASSWORD}
      path: ${baseUrl}
actions:
  get-tokens:
    - cmd[${nodes.vps.master.id}]: docker swarm join-token -q worker
    - setGlobals:
        worker-token: ${response.out}

  pull-bitnami-mariadb:
    - cmd [${nodes.vps.master.id}]: docker pull bitnami/mariadb:10.1.29-r2

  setup-docker-stack:
    - cmd [${nodes.vps.master.id}]: |-
        mkdir -p /opt/services/mysql-repl
        wget ${baseUrl}/scripts/mysql-repl/docker-compose.yml -O /opt/services/mysql-repl/docker-compose.yml &>> /var/log/run.log
        sed -i "s/replication_user/${globals.REPLICATION_USER}/" /opt/services/mysql-repl/docker-compose.yml
        sed -i "s/replication_password/${globals.REPLICATION_PASSWORD}/" /opt/services/mysql-repl/docker-compose.yml
        sed -i "s/mariadb_root_password/${globals.MARIADB_ROOT_PASSWORD}/" /opt/services/mysql-repl/docker-compose.yml
        sed -i "s/mariadb_master_host/${globals.MARIADB_MASTER_HOST}/" /opt/services/mysql-repl/docker-compose.yml
        sed -i "s/docker_master_hostname/node${globals.DOCKER_MASTER_HOSTNAME}-${env.domain}/" /opt/services/mysql-repl/docker-compose.yml
        sed -i "s/docker_slave_hostname/node${globals.DOCKER_SLAVE_HOSTNAME}-${env.domain}/" /opt/services/mysql-repl/docker-compose.yml
    
    - cmd [${nodes.vps.master.id}]: docker stack deploy -c /opt/services/mysql-repl/docker-compose.yml mysql





   
